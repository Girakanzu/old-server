////
// For license information see the LICENSE document
////

package entice.protocol;

import "entice/protocol/util.proto";


message Entity {
  required UUID entityUID = 1;
}


message Components {                        // Lists all components defined below. This is so we can
                                            // have a message containing any number of different components.
  optional Name name = 1;
  optional Position position = 2;
  optional Movement movement = 3;
}


message EntityState {                       // A snapshot of an entity and any number of its components
  required Entity entity = 1;
  required Components components = 2;       // This does not require ALL available components of the entity!
}


message WorldDiff {
  repeated EntityState entity_diffs = 1;
}


////
// Component definitions:
//
// Note that components should only consist of simple (scalar) types or enums.
// If there is a need to define a subtype, then it should keep to the same principle.
// Remember to keep it simple!
// Vector and Positions and all that defined in Util are regarded as simple types.
////


message Name {
  required string name = 1;                 // Optional cause PCs have it, some NPCs don't
}


message Position {
  required Coord2D pos = 1;
}


message Movement {
  required Coord2D dir = 1;
  required float speed = 2;
}
